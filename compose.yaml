name: todo-apps

services:
  ui:
    build:
      context: ./ui
      dockerfile: ./Dockerfile
    container_name: ui.local.todoapps.dev
    privileged: true
    restart: always
    tty: true
    env_file:
      - ./ui/.env
    networks:
      - todoapps
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp

  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    container_name: api.local.todoapps.dev
    depends_on:
      db:
        condition: service_started
    privileged: true
    restart: always
    tty: true
    env_file:
      - ./api/.env
    networks:
      - todoapps
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp

  db:
    build:
      context: ./db
      dockerfile: ./Dockerfile
    container_name: db.local.todoapps.dev
    privileged: true
    restart: always
    tty: true
    volumes:
      - type: bind
        source: ./db/data
        target: /var/lib/mysql
        bind:
          create_host_path: true
      - type: bind
        source: ./db/init.d
        target: /docker-entrypoint-initdb.d
        bind:
          create_host_path: true
      - type: bind
        source: ./db/my.cnf
        target: /etc/mysql/conf.d/my.cnf
        bind:
          create_host_path: true
      - type: bind
        source: ./db/access.cnf
        target: /home/access.cnf
        bind:
          create_host_path: true
    env_file:
      - ./db/.env
    networks:
      - todoapps
    ports:
      - mode: ingress
        target: 3306
        protocol: tcp

networks:
  todoapps:
    name: todoapps_link
    driver: bridge
    enable_ipv6: false
